{
  "activities": [
    {
      "title": "Java Basic Math Operations",
      "description": "Complete these coding tasks to test basic math operations in Java.",
      "questions": [
        {
          "id": "q1",
          "codingQuestion": "Write a Java method to add two numbers.",
          "functionName": "add",
          "lesson": "Addition Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q2",
          "codingQuestion": "Write a Java method to subtract two numbers.",
          "functionName": "subtract",
          "lesson": "Subtraction Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q3",
          "codingQuestion": "Write a Java method to multiply two numbers.",
          "functionName": "multiply",
          "lesson": "Multiplication Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q4",
          "codingQuestion": "Write a Java method to divide two numbers.",
          "functionName": "divide",
          "lesson": "Division Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q5",
          "codingQuestion": "Write a Java method to find the power of a number.",
          "functionName": "power",
          "lesson": "Power Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q6",
          "codingQuestion": "Write a Java method to find the modulo of two numbers.",
          "functionName": "mod",
          "lesson": "Modulo Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q7",
          "codingQuestion": "Write a Java method to find the maximum of two numbers.",
          "functionName": "findMax",
          "lesson": "Max Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q8",
          "codingQuestion": "Write a Java method to check if a number is even.",
          "functionName": "isEven",
          "lesson": "Even Check Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q9",
          "codingQuestion": "Write a Java method to calculate the factorial of a number.",
          "functionName": "factorial",
          "lesson": "Factorial Method",
          "difficulty": "Hard",
          "xp": 30
        },
        {
          "id": "q10",
          "codingQuestion": "Write a Java method to check if a number is prime.",
          "functionName": "isPrime",
          "lesson": "Prime Check Method",
          "difficulty": "Medium",
          "xp": 20
        }
      ]
    },
    {
      "title": "Java String Operations",
      "description": "Complete these coding tasks to test string operations in Java.",
      "questions": [
        {
          "id": "q11",
          "codingQuestion": "Write a Java method to concatenate two strings.",
          "functionName": "concatStrings",
          "lesson": "Concatenation Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q12",
          "codingQuestion": "Write a Java method to find the length of a string.",
          "functionName": "stringLength",
          "lesson": "Length Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q13",
          "codingQuestion": "Write a Java method to reverse a string.",
          "functionName": "reverseString",
          "lesson": "Reversal Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q14",
          "codingQuestion": "Write a Java method to convert a string to uppercase.",
          "functionName": "toUpperCase",
          "lesson": "Uppercase Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q15",
          "codingQuestion": "Write a Java method to convert a string to lowercase.",
          "functionName": "toLowerCase",
          "lesson": "Lowercase Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q16",
          "codingQuestion": "Write a Java method to check if a string is a palindrome.",
          "functionName": "isPalindrome",
          "lesson": "Palindrome Check Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q17",
          "codingQuestion": "Write a Java method to replace a substring within a string.",
          "functionName": "replaceSubstring",
          "lesson": "Replace Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q18",
          "codingQuestion": "Write a Java method to find a substring within a string.",
          "functionName": "findSubstring",
          "lesson": "Find Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q19",
          "codingQuestion": "Write a Java method to split a string by a delimiter.",
          "functionName": "splitString",
          "lesson": "Split Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q20",
          "codingQuestion": "Write a Java method to join a list of strings into a single string with a delimiter.",
          "functionName": "joinStrings",
          "lesson": "Join Method",
          "difficulty": "Medium",
          "xp": 20
        }
      ]
    },
    {
      "title": "Java List Operations",
      "description": "Complete these coding tasks to test list operations in Java.",
      "questions": [
        {
          "id": "q21",
          "codingQuestion": "Write a Java method to add an item to a list.",
          "functionName": "addItem",
          "lesson": "Add Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q22",
          "codingQuestion": "Write a Java method to remove an item from a list.",
          "functionName": "removeItem",
          "lesson": "Remove Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q23",
          "codingQuestion": "Write a Java method to find the index of an item in a list.",
          "functionName": "findIndex",
          "lesson": "Index Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q24",
          "codingQuestion": "Write a Java method to sort a list.",
          "functionName": "sortList",
          "lesson": "Sort Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q25",
          "codingQuestion": "Write a Java method to reverse a list.",
          "functionName": "reverseList",
          "lesson": "Reverse Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q26",
          "codingQuestion": "Write a Java method to merge two lists.",
          "functionName": "mergeLists",
          "lesson": "Merge Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q27",
          "codingQuestion": "Write a Java method to find the maximum value in a list.",
          "functionName": "maxValue",
          "lesson": "Max Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q28",
          "codingQuestion": "Write a Java method to find the minimum value in a list.",
          "functionName": "minValue",
          "lesson": "Min Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q29",
          "codingQuestion": "Write a Java method to count the number of occurrences of an item in a list.",
          "functionName": "countOccurrences",
          "lesson": "Count Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q30",
          "codingQuestion": "Write a Java method to remove duplicates from a list.",
          "functionName": "removeDuplicates",
          "lesson": "Remove Duplicates Method",
          "difficulty": "Medium",
          "xp": 20
        }
      ]
    },
    {
      "title": "Java Map Operations",
      "description": "Complete these coding tasks to test map operations in Java.",
      "questions": [
        {
          "id": "q31",
          "codingQuestion": "Write a Java method to add a key-value pair to a map.",
          "functionName": "addKeyValue",
          "lesson": "Add Key-Value Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q32",
          "codingQuestion": "Write a Java method to remove a key-value pair from a map.",
          "functionName": "removeKeyValue",
          "lesson": "Remove Key-Value Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q33",
          "codingQuestion": "Write a Java method to find a value by key in a map.",
          "functionName": "findValue",
          "lesson": "Find Value Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q34",
          "codingQuestion": "Write a Java method to merge two maps.",
          "functionName": "mergeMaps",
          "lesson": "Merge Maps Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q35",
          "codingQuestion": "Write a Java method to check if a key exists in a map.",
          "functionName": "keyExists",
          "lesson": "Key Exists Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q36",
          "codingQuestion": "Write a Java method to get all keys in a map.",
          "functionName": "getKeys",
          "lesson": "Get Keys Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q37",
          "codingQuestion": "Write a Java method to get all values in a map.",
          "functionName": "getValues",
          "lesson": "Get Values Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q38",
          "codingQuestion": "Write a Java method to find the key with the maximum value in a map.",
          "functionName": "maxValueKey",
          "lesson": "Max Value Key Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q39",
          "codingQuestion": "Write a Java method to invert a map (swap keys and values).",
          "functionName": "invertMap",
          "lesson": "Invert Map Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q40",
          "codingQuestion": "Write a Java method to sort a map by its keys.",
          "functionName": "sortByKeys",
          "lesson": "Sort by Keys Method",
          "difficulty": "Medium",
          "xp": 20
        }
      ]
    },
    {
      "title": "Java Set Operations",
      "description": "Complete these coding tasks to test set operations in Java.",
      "questions": [
        {
          "id": "q41",
          "codingQuestion": "Write a Java method to add an element to a set.",
          "functionName": "addElement",
          "lesson": "Add Element Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q42",
          "codingQuestion": "Write a Java method to remove an element from a set.",
          "functionName": "removeElement",
          "lesson": "Remove Element Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q43",
          "codingQuestion": "Write a Java method to find the union of two sets.",
          "functionName": "unionSets",
          "lesson": "Union Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q44",
          "codingQuestion": "Write a Java method to find the intersection of two sets.",
          "functionName": "intersectionSets",
          "lesson": "Intersection Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q45",
          "codingQuestion": "Write a Java method to find the difference between two sets.",
          "functionName": "differenceSets",
          "lesson": "Difference Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q46",
          "codingQuestion": "Write a Java method to check if a set is a subset of another set.",
          "functionName": "isSubset",
          "lesson": "Subset Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q47",
          "codingQuestion": "Write a Java method to check if a set is a superset of another set.",
          "functionName": "isSuperset",
          "lesson": "Superset Method",
          "difficulty": "Medium",
          "xp": 20
        },
        {
          "id": "q48",
          "codingQuestion": "Write a Java method to clear a set.",
          "functionName": "clearSet",
          "lesson": "Clear Set Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q49",
          "codingQuestion": "Write a Java method to find the length of a set.",
          "functionName": "lengthSet",
          "lesson": "Length Method",
          "difficulty": "Easy",
          "xp": 10
        },
        {
          "id": "q50",
          "codingQuestion": "Write a Java method to convert a list to a set.",
          "functionName": "listToSet",
          "lesson": "Convert List Method",
          "difficulty": "Easy",
          "xp": 10
        }
      ]
    }
  ]
}
